@model TestMvc.Models.Product
@{
    ViewBag.Title = "Edit";
}
<div class="row">
    <div class="col">
        <h3>Update Product</h3>
        <hr />
        @using (Html.BeginForm())
        {
            @Html.HiddenFor(x=>x.ProductId)
            <div class="form-group row">
                @Html.LabelFor(x => x.ProductName, new { @class = "col-form-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(x => x.UnitePrice, new { @class = "col-form-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(x => x.UnitePrice, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.UnitePrice, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(x => x.Discount, new { @class = "col-form-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBoxFor(x => x.Discount, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Discount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="offset-2 col-10">
                    <input type="submit" class="btn btn-primary" value="Update" />
                </div>
            </div>
        }
        @Html.ActionLink("Back to the list", "Index")
        @section scripts{
            <script src="~/Scripts/jquery.validate.min.js"></script>
            <script src="~/Scripts/jquery.validate.unobtrusive.bootstrap.min.js"></script>
        }
    </div>
</div>

